upstream go_backends {
        server 127.0.0.1:8081;
        server 127.0.0.1:8082;
        server 127.0.0.1:8083;
        server 127.0.0.1:8084;
        server 127.0.0.1:8085;
        server 127.0.0.1:8086;
        server 127.0.0.1:8087;
        server 127.0.0.1:8088;
}

upstream node_backends {
        server 127.0.0.1:3001;
        server 127.0.0.1:3002;
        server 127.0.0.1:3003;
        server 127.0.0.1:3004;
        server 127.0.0.1:3005;
        server 127.0.0.1:3006;
        server 127.0.0.1:3007;
        server 127.0.0.1:3008;
}


server {
	listen 443 ssl http2;
	server_name hw1.asdfghj.ir;

	ssl_certificate /etc/letsencrypt/live/hw1.asdfghj.ir/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/hw1.asdfghj.ir/privkey.pem;
	ssl_session_timeout 1d;
	ssl_protocols TLSv1.2;
	ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
	ssl_prefer_server_ciphers on;
	ssl_session_cache shared:SSL:50m;
	# HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
	add_header Strict-Transport-Security max-age=15768000;
	# OCSP Stapling ---
	# fetch OCSP records from URL in ssl_certificate and cache them
	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate /etc/letsencrypt/live/hw1.asdfghj.ir/chain.pem;

	location ~ /.well-known/acme-challenge {
		allow all;
	}

	location / {
		return 404;
	}

	location = /go/form {
		alias /var/www/data/htm;
		index sha256.html;
	}

	location = /go/sha {
        proxy_pass http://go_backends/sha;
    }

	location = /node/sha {
		proxy_pass http://node_backends/sha;
	}

	location /go/ {
		proxy_pass http://go_backends/;
		proxy_set_header Host      $host;
		proxy_set_header X-Real-IP $remote_addr;
	}

	location /node/ {
		proxy_pass http://node_backends/;
		proxy_set_header Host      $host;
		proxy_set_header X-Real-IP $remote_addr;
	}
}

server {
	listen 80;
	server_name hw1.asdfghj.ir;

	location /.well-known {
		root /usr/share/nginx/html;
	}

	location / {
		return 301 https://$server_name$request_uri;
	}
}
